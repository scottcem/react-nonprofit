[{"/Users/ScottCem/Documents/projects/weather-app/src/index.js":"1","/Users/ScottCem/Documents/projects/weather-app/src/reportWebVitals.js":"2","/Users/ScottCem/Documents/projects/weather-app/src/App.js":"3","/Users/ScottCem/Documents/projects/weather-app/src/components/Forecast/Forecast.js":"4","/Users/ScottCem/Documents/projects/weather-app/src/components/Conditions/Conditions.js":"5","/Users/ScottCem/Documents/projects/weather-app/src/components/Header/header.js":"6","/Users/ScottCem/Documents/projects/weather-app/src/components/Header/Header.js":"7"},{"size":500,"mtime":1608670834000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608670834000,"results":"10","hashOfConfig":"9"},{"size":527,"mtime":1616005546184,"results":"11","hashOfConfig":"9"},{"size":2517,"mtime":1615822508496,"results":"12","hashOfConfig":"9"},{"size":727,"mtime":1608751414000,"results":"13","hashOfConfig":"9"},{"size":141,"mtime":1615997435931,"results":"14","hashOfConfig":"9"},{"size":141,"mtime":1615997435931,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"pocd7w",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/ScottCem/Documents/projects/weather-app/src/index.js",[],["33","34"],"/Users/ScottCem/Documents/projects/weather-app/src/reportWebVitals.js",[],"/Users/ScottCem/Documents/projects/weather-app/src/App.js",[],"/Users/ScottCem/Documents/projects/weather-app/src/components/Forecast/Forecast.js",["35"],"import React, { useState } from \"react\";\nimport Conditions from \"../Conditions/Conditions\";\nimport classes from \"./Forecast.module.css\";\n\nfunction Forecast() {\n  let [responseObj, setResponseObj] = useState({});\n  let [city, setCity] = useState(\"\");\n  let [unit, setUnit] = useState(\"imperial\");\n  const uriEncodedCity = encodeURIComponent(city);\n  let [error, setError] = useState(false);\n  let [loading, setLoading] = useState(false);\n\n  function getForecast(e) {\n    e.preventDefault();\n\n    if (city.length === 0) {\n      return setError(true);\n    }\n\n    // Clear state in preparation for new data\n    setError(false);\n    setResponseObj({});\n\n    setLoading(true);\n\n    fetch(\n      `https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.cod !== 200) {\n          throw new Error();\n        }\n        setResponseObj(response);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(true);\n        setLoading(false);\n        console.log(err.message);\n      });\n  }\n\n  return (\n    <div>\n      <h2>Find A Location Near You!!!</h2>\n      <form onSubmit={getForecast}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter City\"\n          maxLength=\"50\"\n          className={classes.textInput}\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />\n        {/* <label className={classes.Radio}>\n          <input\n            type=\"radio\"\n            name=\"units\"\n            checked={unit === \"imperial\"}\n            value=\"imperial\"\n            onChange={(e) => setUnit(e.target.value)}\n          />\n          Fahrenheit\n        </label>\n        <label className={classes.Radio}>\n          <input\n            type=\"radio\"\n            name=\"units\"\n            checked={unit === \"metric\"}\n            value=\"metric\"\n            onChange={(e) => setUnit(e.target.value)}\n          />\n          Celcius\n        </label> */}\n        <button className={classes.Button} type=\"submit\">\n          Get Location\n        </button>\n      </form>\n      <Conditions\n        responseObj={responseObj}\n        error={error} //new\n        loading={loading} //new\n      />\n    </div>\n  );\n}\n\nexport default Forecast;\n//notes here\n","/Users/ScottCem/Documents/projects/weather-app/src/components/Conditions/Conditions.js",[],"/Users/ScottCem/Documents/projects/weather-app/src/components/Header/header.js",["36"],"/Users/ScottCem/Documents/projects/weather-app/src/components/Header/Header.js",["37"],"import React from \"react\";\nimport Logo from \"./logo.png\";\n\nexport default function Header(){\n    return (\n        <img src = {Logo}/>\n    )\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":8,"column":14,"nodeType":"44","messageId":"45","endLine":8,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":6,"column":9,"nodeType":"48","endLine":6,"endColumn":28},{"ruleId":"46","severity":1,"message":"47","line":6,"column":9,"nodeType":"48","endLine":6,"endColumn":28},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'setUnit' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]